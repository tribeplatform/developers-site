(self.webpackChunkdevelopers=self.webpackChunkdevelopers||[]).push([[74799],{3905:function(e,n,r){"use strict";r.d(n,{Zo:function(){return u},kt:function(){return f}});var t=r(67294);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function l(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function p(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=t.createContext({}),c=function(e){var n=t.useContext(i),r=n;return e&&(r="function"==typeof e?e(n):l(l({},n),e)),r},u=function(e){var n=c(e.components);return t.createElement(i.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),m=c(r),f=a,d=m["".concat(i,".").concat(f)]||m[f]||s[f]||o;return r?t.createElement(d,l(l({ref:n},u),{},{components:r})):t.createElement(d,l({ref:n},u))}));function f(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=m;var p={};for(var i in n)hasOwnProperty.call(n,i)&&(p[i]=n[i]);p.originalType=e,p.mdxType="string"==typeof e?e:a,l[1]=p;for(var c=2;c<o;c++)l[c]=r[c];return t.createElement.apply(null,l)}return t.createElement.apply(null,r)}m.displayName="MDXCreateElement"},33446:function(e,n,r){"use strict";r.r(n),r.d(n,{frontMatter:function(){return p},metadata:function(){return i},toc:function(){return c},default:function(){return s}});var t=r(22122),a=r(19756),o=(r(67294),r(3905)),l=["components"],p={id:"plan-renewal-type",title:"PlanRenewalType"},i={unversionedId:"graphql/enums/plan-renewal-type",id:"graphql/enums/plan-renewal-type",isDocsHomePage:!1,title:"PlanRenewalType",description:"No description",source:"@site/docs/graphql/enums/plan-renewal-type.mdx",sourceDirName:"graphql/enums",slug:"/graphql/enums/plan-renewal-type",permalink:"/docs/graphql/enums/plan-renewal-type",editUrl:"https://github.com/tribeplatform/developers-site/edit/master/docs/graphql/enums/plan-renewal-type.mdx",version:"current",frontMatter:{id:"plan-renewal-type",title:"PlanRenewalType"},sidebar:"schemaSidebar",previous:{title:"PlanName",permalink:"/docs/graphql/enums/plan-name"},next:{title:"PostFieldsEnum",permalink:"/docs/graphql/enums/post-fields-enum"}},c=[{value:"Values",id:"values",children:[]}],u={toc:c};function s(e){var n=e.components,r=(0,a.Z)(e,l);return(0,o.kt)("wrapper",(0,t.Z)({},u,r,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"No description"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-graphql"},"enum PlanRenewalType {\n  month\n  year\n}\n")),(0,o.kt)("h3",{id:"values"},"Values"),(0,o.kt)("h4",{id:"month"},(0,o.kt)("inlineCode",{parentName:"h4"},"month")),(0,o.kt)("h4",{id:"year"},(0,o.kt)("inlineCode",{parentName:"h4"},"year")))}s.isMDXComponent=!0}}]);